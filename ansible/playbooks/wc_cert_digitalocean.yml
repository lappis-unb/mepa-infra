---
- name: Generate Wildcard SSL certificates using Certbot and DigitalOcean DNS plugin
  hosts: all
  gather_facts: false
  become: true
  vars_files:
    - ../host_vars/secrets.yml
    - ../host_vars/users.yml
  vars:
    ansible_ssh_user: '{{ ansible_user }}'
    letsencrypt_dir: "/etc/letsencrypt/live/{{ domain_name }}"
    credentials_dir: "/home/{{ ansible_user }}/certbot"
    cert_file: "{{ letsencrypt_dir }}/fullchain.pem"

  pre_tasks:
    - name: Check if Certbot SNAP is installed
      ansible.builtin.command: snap list certbot
      register: certbot_snap_check
      changed_when: false
      failed_when: false

    - name: Exit playbook if Certbot is not installed
      ansible.builtin.meta: end_play
      when: certbot_snap_check.rc != 0

    - name: Check if certificate for the specific domain exists
      ansible.builtin.stat:
        path: "{{ cert_file }}"
      register: cert_file_check

    - name: Debug certificate information
      ansible.builtin.debug:
        msg: "Certificate for {{ domain_name }} exists: {{ cert_file_check.stat.exists }}"

    - name: Skip SSL certificate generation (certificate already exists for this domain)
      ansible.builtin.meta: end_play
      when: cert_file_check.stat.exists

  tasks:
    - name: Create directory for DigitalOcean credentials
      ansible.builtin.file:
        path: "{{ credentials_dir }}"
        state: directory
        mode: '0700'

    - name: Create DigitalOcean DNS credentials file
      ansible.builtin.copy:
        dest: "{{ credentials_dir }}/do_key.ini"
        content: |
          dns_digitalocean_token = {{ digital_ocean_token }}
        mode: '0600'

    - name: Generate SSL certificates using Certbot and DigitalOcean DNS plugin
      ansible.builtin.command: >
        certbot certonly
        --email {{ certbot_email }}
        --dns-digitalocean
        --dns-digitalocean-credentials {{ credentials_dir }}/do_key.ini
        --dns-digitalocean-propagation-seconds 60
        -d '*.{{ domain_name }}'
        --non-interactive
        --agree-tos
      args:
        creates: "{{ cert_file }}"

    - name: Display SSL certificates information
      ansible.builtin.command: certbot certificates
      register: cert_info
      changed_when: false

    - name: Show SSL certificates information
      ansible.builtin.debug:
        var: cert_info.stdout_lines

    - name: Check for Certbot systemd timer
      ansible.builtin.command:
        cmd: systemctl list-timers | grep certbot
      register: systemd_timer_check
      changed_when: false
      failed_when: false

    - name: Display systemd timer check result
      ansible.builtin.debug:
        msg: "Certbot systemd timer: {{ 'Found' if systemd_timer_check.rc == 0 else 'Not found' }}"

    - name: Test Certbot automatic renewal
      ansible.builtin.command:
        cmd: certbot renew --dry-run
      register: certbot_renew_test
      changed_when: false

    - name: Display Certbot renewal test results
      ansible.builtin.debug:
        var: certbot_renew_test.stdout_lines
